package electory.client.audio.modplug;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Structure.FieldOrder;

/**
 * This file was autogenerated by
 * <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit
 * <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> ,
 * <a href="http://rococoa.dev.java.net/">Rococoa</a>, or
 * <a href="http://jna.dev.java.net/">JNA</a>.
 */
@FieldOrder({ "mFlags", "mChannels", "mBits", "mFrequency", "mResamplingMode", "mStereoSeparation", "mMaxMixChannels",
		"mReverbDepth", "mReverbDelay", "mBassAmount", "mBassRange", "mSurroundDepth", "mSurroundDelay", "mLoopCount" })
public class ModPlug_Settings extends Structure {
	/** One or more of the MODPLUG_ENABLE_* flags above, bitwise-OR'ed */
	public int mFlags;
	/** Number of channels - 1 for mono or 2 for stereo */
	public int mChannels;
	/** Bits per sample - 8, 16, or 32 */
	public int mBits;
	/** Sampling rate - 11025, 22050, or 44100 */
	public int mFrequency;
	/** One of MODPLUG_RESAMPLE_*, above */
	public int mResamplingMode;
	/** Stereo separation, 1 - 256 */
	public int mStereoSeparation;
	/** Maximum number of mixing channels (polyphony), 32 - 256 */
	public int mMaxMixChannels;
	/** Reverb level 0(quiet)-100(loud) */
	public int mReverbDepth;
	/** Reverb delay in ms, usually 40-200ms */
	public int mReverbDelay;
	/** XBass level 0(quiet)-100(loud) */
	public int mBassAmount;
	/** XBass cutoff in Hz 10-100 */
	public int mBassRange;
	/** Surround level 0(quiet)-100(heavy) */
	public int mSurroundDepth;
	/** Surround delay in ms, usually 5-40ms */
	public int mSurroundDelay;
	/**
	 * Number of times to loop. Zero prevents looping.<br>
	 * -1 loops forever.
	 */
	public int mLoopCount;

	public ModPlug_Settings() {
		super();
	}

	public ModPlug_Settings(Pointer peer) {
		super(peer);
	}
}
